@inject LeadService leadService
@inject IDialogService DialogService

@if (areLeadsFetched == false)
{
    <p>Fetching your Leads ...</p>
}
else
{
    @* lead title *@
    <MudStack Row Class="mb-2" AlignItems="AlignItems.Center">
        <MudText Typo="Typo.h6">Leads</MudText>
        <MudSpacer></MudSpacer>
        <MudButton @onclick="OpenAddNewLeadDialogAsync" Variant="Variant.Text" Color="Color.Primary"
            StartIcon="@Icons.Material.Filled.Add">Add New Lead
        </MudButton>
    </MudStack>

    @* lead table *@
    <MudDataGrid T="Lead" Items="@leads" Filterable FilterMode="DataGridFilterMode.ColumnFilterRow" Class="mb-4">
        <Columns>
            <PropertyColumn Property="x => x.FirstName" Title="First Name"></PropertyColumn>
            <PropertyColumn Property="x => x.LastName" Title="Last Name"></PropertyColumn>
            <PropertyColumn Property="x => x.Email" Title="Email"></PropertyColumn>
            <PropertyColumn Property="x => x.Status" Title="Status"></PropertyColumn>
            <PropertyColumn Property="x => x.Note" Title="Note"></PropertyColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Lead"></MudDataGridPager>
        </PagerContent>
    </MudDataGrid>
}

@code {
    bool areLeadsFetched = false;
    List<Lead> leads = new List<Lead>();

    protected override async Task OnInitializedAsync()
    {
        leads = await leadService.GetAllLeads();
        areLeadsFetched = true;
    }

    private async Task OpenAddNewLeadDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = await DialogService.ShowAsync<AddNewLeadDialog>("Simple Dialog", options);

        var result = await dialog.Result;

        if (result is not null && !result.Canceled)
        {
            areLeadsFetched = false;
            leads = await leadService.GetAllLeads();
            areLeadsFetched = true;
        }
    }
}
